version: '3'

services:
  mongo:
    image: "mongo:3.6"
    ports:
      - "27017:27017"
    volumes:
      - "/Users/max/Documents/Work/BigMarine/wo-backup-04-03-2019/wo:/wo-dump" # dump folder
      - "/Users/max/Documents/Work/BigMarine/mongo/bigmarine:/data/db"         # database persistence
    environment:
      TZ: "Europe/London"
    networks:
      - "bigmarinenetwork"
  wo:
    image: "big-marine-meteor:dev"
    volumes:
      - "/Users/max/Documents/Work/BigMarine/big-marine-git/web-observatory/src:/home/docker/wo-src"
      - "./docker/startup.sh:/startup.sh"
    ports:
      - "3000:3000" # has to match environment.PORT below
    links:
      - "mongo:mongo"
      - "bmmysql:docker_mysql"
      - "bmpostgis:docker_postgis"
    depends_on:
      - "mongo"
    environment:
      TZ: "Europe/London"
      MONGO_URL: "mongodb://mongo:27017/wo"
#      PORT: "4000" # doesn't seem to be working
#      HTTP_FORWARDED_COUNT: "1" # however many number of proxies you have running before your Meteor application
      BIND_IP: "127.0.0.1"
    networks:
      - "bigmarinenetwork"
  bmmysql:
    image: "mysql:5.5"
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: Europe/London
    volumes:
      - /Users/max/Documents/Work/BigMarine/mysql:/var/lib/mysql
    networks:
      - "bigmarinenetwork"
  bmpostgis:
    image: "kartoza/postgis"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: marine
      POSTGRES_PASS: marine
      POSTGRES_DBNAME: big-marine
      ALLOW_IP_RANGE: 0.0.0.0/0
      TZ: Europe/London
    volumes:
      - /Users/max/Documents/Work/BigMarine/big-marine-git/data-app/pg_data:/var/lib/postgresql
    networks:
      - "bigmarinenetwork"
networks:
  bigmarinenetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16